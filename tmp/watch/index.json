[{"uri":"http://localhost:8901/reference/sigma-net.html","title":"Sigma.NET","content":"Defaults \nGlobals \nInternalUtils \nRender \nStyleParam \nCircularOptions \nCssLength \nDisplayData \nDisplayOptions \nEdge \nFA2Options \nFA2Settings \nGraphData \nHTML \nJSlibReference \nLayout \nNode \nNoverlapOptions \nNoverlapSettings \nPlainJsonString \nPlainJsonStringConverter \nRandomOptions \nRotationOptions \nSigmaGraph \nVisGraph \nVisGraphElement","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-interactive.html","title":"Sigma.NET.Interactive","content":"Formatters \nFormatterKernelExtension","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-defaults.html","title":"Defaults","content":"Defaults \n Contains mutable global default values.\n Changing these values will apply the default values to all consecutive Graph generations. \nDefaults.DefaultWidth \nDefaultWidth \nDefaults.DefaultHeight \nDefaultHeight \nDefaults.DefaultDisplayOptions \nDefaultDisplayOptions \nDefaults.reset \nreset","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-defaults.html#DefaultWidth","title":"Defaults.DefaultWidth","content":"Defaults.DefaultWidth \nDefaultWidth \n The default width of the graph container in generated HTML files. Default: 100%","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-defaults.html#DefaultHeight","title":"Defaults.DefaultHeight","content":"Defaults.DefaultHeight \nDefaultHeight \n The default height of the graph container in generated HTML files. Default: 900 pixels","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-defaults.html#DefaultDisplayOptions","title":"Defaults.DefaultDisplayOptions","content":"Defaults.DefaultDisplayOptions \nDefaultDisplayOptions \n The default display options for the graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-defaults.html#reset","title":"Defaults.reset","content":"Defaults.reset \nreset \n Resets global defaults to the initial values","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html","title":"Globals","content":"Globals \n \nGlobals.NUGET_VERSION \nNUGET_VERSION \nGlobals.GRAPHOLOGY_LIB_VERSION \nGRAPHOLOGY_LIB_VERSION \nGlobals.SIGMAJS_VERSION \nSIGMAJS_VERSION \nGlobals.GRAPHOLOGY_VERSION \nGRAPHOLOGY_VERSION \nGlobals.SCRIPT_TEMPLATE \nSCRIPT_TEMPLATE \nGlobals.REQUIREJS_SCRIPT_TEMPLATE \nREQUIREJS_SCRIPT_TEMPLATE","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#NUGET_VERSION","title":"Globals.NUGET_VERSION","content":"Globals.NUGET_VERSION \nNUGET_VERSION \n NuGet package version for Sigma.NET","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#GRAPHOLOGY_LIB_VERSION","title":"Globals.GRAPHOLOGY_LIB_VERSION","content":"Globals.GRAPHOLOGY_LIB_VERSION \nGRAPHOLOGY_LIB_VERSION \n Version of the Graphology library used in the project","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#SIGMAJS_VERSION","title":"Globals.SIGMAJS_VERSION","content":"Globals.SIGMAJS_VERSION \nSIGMAJS_VERSION \n The version of sigma.js used in the rendered HTML documents from the CDN","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#GRAPHOLOGY_VERSION","title":"Globals.GRAPHOLOGY_VERSION","content":"Globals.GRAPHOLOGY_VERSION \nGRAPHOLOGY_VERSION \n The version of graphology.js used in the rendered HTML documents from the CDN","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#SCRIPT_TEMPLATE","title":"Globals.SCRIPT_TEMPLATE","content":"Globals.SCRIPT_TEMPLATE \nSCRIPT_TEMPLATE \n JavaScript template for rendering the graph. It includes placeholders for container ID, graph data, layout, settings, and widgets.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-globals.html#REQUIREJS_SCRIPT_TEMPLATE","title":"Globals.REQUIREJS_SCRIPT_TEMPLATE","content":"Globals.REQUIREJS_SCRIPT_TEMPLATE \nREQUIREJS_SCRIPT_TEMPLATE \n JavaScript template for rendering the graph using RequireJS. It includes placeholders for JavaScript file URLs, container ID, graph data, layout, settings, and widgets.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils.html","title":"InternalUtils","content":"InternalUtils \n \nInternalUtils.JSRefGroup \nJSRefGroup \nInternalUtils.readFromManifestResource \nreadFromManifestResource \nInternalUtils.getSourceCodeJS \ngetSourceCodeJS \nInternalUtils.getUriJS \ngetUriJS \nInternalUtils.getNugetPathJS \ngetNugetPathJS","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils.html#readFromManifestResource","title":"InternalUtils.readFromManifestResource","content":"InternalUtils.readFromManifestResource \nreadFromManifestResource \n Reads the content of an embedded resource from the assembly.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils.html#getSourceCodeJS","title":"InternalUtils.getSourceCodeJS","content":"InternalUtils.getSourceCodeJS \ngetSourceCodeJS \n Retrieves the source code for JavaScript libraries from embedded resources.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils.html#getUriJS","title":"InternalUtils.getUriJS","content":"InternalUtils.getUriJS \ngetUriJS \n Returns the URLs for JavaScript libraries from a CDN, using versions specified in Globals.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils.html#getNugetPathJS","title":"InternalUtils.getNugetPathJS","content":"InternalUtils.getNugetPathJS \ngetNugetPathJS \n Returns the paths for JavaScript libraries based on NuGet package location in the user\u0027s profile directory.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils-jsrefgroup.html","title":"JSRefGroup","content":"JSRefGroup \n \nJSRefGroup.Sigma \nSigma \nJSRefGroup.Graphology \nGraphology \nJSRefGroup.GraphologyLib \nGraphologyLib","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils-jsrefgroup.html#Sigma","title":"JSRefGroup.Sigma","content":"JSRefGroup.Sigma \nSigma \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils-jsrefgroup.html#Graphology","title":"JSRefGroup.Graphology","content":"JSRefGroup.Graphology \nGraphology \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-internalutils-jsrefgroup.html#GraphologyLib","title":"JSRefGroup.GraphologyLib","content":"JSRefGroup.GraphologyLib \nGraphologyLib \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render.html","title":"Render","content":"Render \n \nRender.ColorOrReference \nColorOrReference \nRender.Settings \nSettings","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-colororreference.html","title":"ColorOrReference","content":"ColorOrReference \n \nColorOrReference.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nColorOrReference.Init \nInit \nColorOrReference.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-colororreference.html#\u0060\u0060.ctor\u0060\u0060","title":"ColorOrReference.\u0060\u0060.ctor\u0060\u0060","content":"ColorOrReference.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-colororreference.html#Init","title":"ColorOrReference.Init","content":"ColorOrReference.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-colororreference.html#Style","title":"ColorOrReference.Style","content":"ColorOrReference.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-settings.html","title":"Settings","content":"Settings \n \nSettings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSettings.Init \nInit \nSettings.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-settings.html#\u0060\u0060.ctor\u0060\u0060","title":"Settings.\u0060\u0060.ctor\u0060\u0060","content":"Settings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-settings.html#Init","title":"Settings.Init","content":"Settings.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-render-settings.html#Style","title":"Settings.Style","content":"Settings.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam.html","title":"StyleParam","content":"StyleParam \n \nStyleParam.EdgeType \nEdgeType \nStyleParam.NodeType \nNodeType","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-edgetype.html","title":"EdgeType","content":"EdgeType \n Defines different types of edge styles for graph visualization. \nEdgeType.toString \ntoString \nEdgeType.Line \nLine \nEdgeType.Arrow \nArrow \nEdgeType.Custom \nCustom","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-edgetype.html#toString","title":"EdgeType.toString","content":"EdgeType.toString \ntoString \n Converts the edge type to a corresponding string representation.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-edgetype.html#Line","title":"EdgeType.Line","content":"EdgeType.Line \nLine \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-edgetype.html#Arrow","title":"EdgeType.Arrow","content":"EdgeType.Arrow \nArrow \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-edgetype.html#Custom","title":"EdgeType.Custom","content":"EdgeType.Custom \nCustom \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-nodetype.html","title":"NodeType","content":"NodeType \n Defines different types of node shapes for graph visualization. \nNodeType.toString \ntoString \nNodeType.Circle \nCircle \nNodeType.Custom \nCustom","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-nodetype.html#toString","title":"NodeType.toString","content":"NodeType.toString \ntoString \n Converts the node type to a corresponding string representation.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-nodetype.html#Circle","title":"NodeType.Circle","content":"NodeType.Circle \nCircle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-styleparam-nodetype.html#Custom","title":"NodeType.Custom","content":"NodeType.Custom \nCustom \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-circularoptions.html","title":"CircularOptions","content":"CircularOptions \n \nCircularOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCircularOptions.Init \nInit \nCircularOptions.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-circularoptions.html#\u0060\u0060.ctor\u0060\u0060","title":"CircularOptions.\u0060\u0060.ctor\u0060\u0060","content":"CircularOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-circularoptions.html#Init","title":"CircularOptions.Init","content":"CircularOptions.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-circularoptions.html#Style","title":"CircularOptions.Style","content":"CircularOptions.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-csslength.html","title":"CssLength","content":"CssLength \n \nCssLength.serialize \nserialize \nCssLength.PX \nPX \nCssLength.Percent \nPercent","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-csslength.html#serialize","title":"CssLength.serialize","content":"CssLength.serialize \nserialize \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-csslength.html#PX","title":"CssLength.PX","content":"CssLength.PX \nPX \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-csslength.html#Percent","title":"CssLength.Percent","content":"CssLength.Percent \nPercent \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displaydata.html","title":"DisplayData","content":"DisplayData \n \nDisplayData.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDisplayData.Init \nInit \nDisplayData.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displaydata.html#\u0060\u0060.ctor\u0060\u0060","title":"DisplayData.\u0060\u0060.ctor\u0060\u0060","content":"DisplayData.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displaydata.html#Init","title":"DisplayData.Init","content":"DisplayData.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displaydata.html#Style","title":"DisplayData.Style","content":"DisplayData.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html","title":"DisplayOptions","content":"DisplayOptions \n Represents display options for the graph visualization. \nDisplayOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDisplayOptions.addAdditionalHeadTags \naddAdditionalHeadTags \nDisplayOptions.addDescription \naddDescription \nDisplayOptions.getAdditionalHeadTags \ngetAdditionalHeadTags \nDisplayOptions.getDescription \ngetDescription \nDisplayOptions.getSigmaReference \ngetSigmaReference \nDisplayOptions.init \ninit \nDisplayOptions.initCDNOnly \ninitCDNOnly \nDisplayOptions.initDefault \ninitDefault \nDisplayOptions.setAdditionalHeadTags \nsetAdditionalHeadTags \nDisplayOptions.setDescription \nsetDescription \nDisplayOptions.setSigmaReference \nsetSigmaReference \nDisplayOptions.style \nstyle \nDisplayOptions.tryGetAdditionalHeadTags \ntryGetAdditionalHeadTags \nDisplayOptions.tryGetDescription \ntryGetDescription \nDisplayOptions.tryGetSigmaReference \ntryGetSigmaReference","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#\u0060\u0060.ctor\u0060\u0060","title":"DisplayOptions.\u0060\u0060.ctor\u0060\u0060","content":"DisplayOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#addAdditionalHeadTags","title":"DisplayOptions.addAdditionalHeadTags","content":"DisplayOptions.addAdditionalHeadTags \naddAdditionalHeadTags \n Adds additional head tags to the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#addDescription","title":"DisplayOptions.addDescription","content":"DisplayOptions.addDescription \naddDescription \n Adds a description to the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#getAdditionalHeadTags","title":"DisplayOptions.getAdditionalHeadTags","content":"DisplayOptions.getAdditionalHeadTags \ngetAdditionalHeadTags \n Gets additional head tags from the display options, defaulting to an empty list if not found.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#getDescription","title":"DisplayOptions.getDescription","content":"DisplayOptions.getDescription \ngetDescription \n Gets the description from the display options, defaulting to an empty list if not found.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#getSigmaReference","title":"DisplayOptions.getSigmaReference","content":"DisplayOptions.getSigmaReference \ngetSigmaReference \n Gets the sigma.js reference from the display options, defaulting to NoReference if not found.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#init","title":"DisplayOptions.init","content":"DisplayOptions.init \ninit \n\n Returns a new DisplayOptions object with the given styles.\n ","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#initCDNOnly","title":"DisplayOptions.initCDNOnly","content":"DisplayOptions.initCDNOnly \ninitCDNOnly \n Returns a DisplayOptions object with the CDN set to Globals.SIGMAJS_VERSION and Globals.GRAPHOLOGY_VERSION.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#initDefault","title":"DisplayOptions.initDefault","content":"DisplayOptions.initDefault \ninitDefault \n Returns a DisplayOptions object with the CDN set to Globals.SIGMAJS_VERSION and additional head tags.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#setAdditionalHeadTags","title":"DisplayOptions.setAdditionalHeadTags","content":"DisplayOptions.setAdditionalHeadTags \nsetAdditionalHeadTags \n Sets additional head tags for the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#setDescription","title":"DisplayOptions.setDescription","content":"DisplayOptions.setDescription \nsetDescription \n Sets the description for the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#setSigmaReference","title":"DisplayOptions.setSigmaReference","content":"DisplayOptions.setSigmaReference \nsetSigmaReference \n Sets the sigma.js reference for the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#style","title":"DisplayOptions.style","content":"DisplayOptions.style \nstyle \n\n Returns a function that applies the given styles to a DisplayOptions object.\n ","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#tryGetAdditionalHeadTags","title":"DisplayOptions.tryGetAdditionalHeadTags","content":"DisplayOptions.tryGetAdditionalHeadTags \ntryGetAdditionalHeadTags \n Tries to get additional head tags from the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#tryGetDescription","title":"DisplayOptions.tryGetDescription","content":"DisplayOptions.tryGetDescription \ntryGetDescription \n Tries to get the description from the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-displayoptions.html#tryGetSigmaReference","title":"DisplayOptions.tryGetSigmaReference","content":"DisplayOptions.tryGetSigmaReference \ntryGetSigmaReference \n Tries to get the sigma.js reference from the display options.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.Init \nInit \nEdge.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-edge.html#Init","title":"Edge.Init","content":"Edge.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-edge.html#Style","title":"Edge.Style","content":"Edge.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2options.html","title":"FA2Options","content":"FA2Options \n \nFA2Options.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFA2Options.Init \nInit \nFA2Options.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2options.html#\u0060\u0060.ctor\u0060\u0060","title":"FA2Options.\u0060\u0060.ctor\u0060\u0060","content":"FA2Options.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2options.html#Init","title":"FA2Options.Init","content":"FA2Options.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2options.html#Style","title":"FA2Options.Style","content":"FA2Options.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2settings.html","title":"FA2Settings","content":"FA2Settings \n \nFA2Settings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFA2Settings.Init \nInit \nFA2Settings.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2settings.html#\u0060\u0060.ctor\u0060\u0060","title":"FA2Settings.\u0060\u0060.ctor\u0060\u0060","content":"FA2Settings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2settings.html#Init","title":"FA2Settings.Init","content":"FA2Settings.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-fa2settings.html#Style","title":"FA2Settings.Style","content":"FA2Settings.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html","title":"GraphData","content":"GraphData \n \nGraphData.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGraphData.addEdge \naddEdge \nGraphData.addNode \naddNode \nGraphData.Nodes \nNodes \nGraphData.Edges \nEdges","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html#\u0060\u0060.ctor\u0060\u0060","title":"GraphData.\u0060\u0060.ctor\u0060\u0060","content":"GraphData.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html#addEdge","title":"GraphData.addEdge","content":"GraphData.addEdge \naddEdge \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html#addNode","title":"GraphData.addNode","content":"GraphData.addNode \naddNode \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html#Nodes","title":"GraphData.Nodes","content":"GraphData.Nodes \nNodes \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-graphdata.html#Edges","title":"GraphData.Edges","content":"GraphData.Edges \nEdges \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html","title":"HTML","content":"HTML \n HTML template for Cytoscape \nHTML.CreateGraphHTML \nCreateGraphHTML \nHTML.CreateGraphScript \nCreateGraphScript \nHTML.Doc \nDoc \nHTML.show \nshow \nHTML.toEmbeddedHTML \ntoEmbeddedHTML \nHTML.toGraphHTML \ntoGraphHTML \nHTML.toGraphHTMLNodes \ntoGraphHTMLNodes","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#CreateGraphHTML","title":"HTML.CreateGraphHTML","content":"HTML.CreateGraphHTML \nCreateGraphHTML \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#CreateGraphScript","title":"HTML.CreateGraphScript","content":"HTML.CreateGraphScript \nCreateGraphScript \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#Doc","title":"HTML.Doc","content":"HTML.Doc \nDoc \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#show","title":"HTML.show","content":"HTML.show \nshow \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#toEmbeddedHTML","title":"HTML.toEmbeddedHTML","content":"HTML.toEmbeddedHTML \ntoEmbeddedHTML \n Converts a Graph to it HTML representation and embeds it into a html page.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#toGraphHTML","title":"HTML.toGraphHTML","content":"HTML.toGraphHTML \ntoGraphHTML \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-html.html#toGraphHTMLNodes","title":"HTML.toGraphHTMLNodes","content":"HTML.toGraphHTMLNodes \ntoGraphHTMLNodes \n Converts a CyGraph to it HTML representation. The div layer has a default size of 600 if not specified otherwise.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html","title":"JSlibReference","content":"JSlibReference \n Sets how the JavaScript library is referenced in the head of HTML documents. \nJSlibReference.Local \nLocal \nJSlibReference.CDN \nCDN \nJSlibReference.Full \nFull \nJSlibReference.Require \nRequire \nJSlibReference.NoReference \nNoReference","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html#Local","title":"JSlibReference.Local","content":"JSlibReference.Local \nLocal \n Local reference to the JavaScript library.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html#CDN","title":"JSlibReference.CDN","content":"JSlibReference.CDN \nCDN \n The URL for a script tag that references the JavaScript library CDN.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html#Full","title":"JSlibReference.Full","content":"JSlibReference.Full \nFull \n Full JavaScript library source code (~100KB) included in the output. HTML files generated with this option are fully self-contained and can be used offline.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html#Require","title":"JSlibReference.Require","content":"JSlibReference.Require \nRequire \n Use requirejs to reference the JavaScript library from a URL.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-jslibreference.html#NoReference","title":"JSlibReference.NoReference","content":"JSlibReference.NoReference \nNoReference \n Include no JavaScript library script at all. Useful when embedding the output into a document that already references the JavaScript library.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html","title":"Layout","content":"Layout \n \nLayout.serialize \nserialize \nLayout.FA2 \nFA2 \nLayout.Noverlap \nNoverlap \nLayout.Circular \nCircular \nLayout.Random \nRandom \nLayout.Rotation \nRotation","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#serialize","title":"Layout.serialize","content":"Layout.serialize \nserialize \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#FA2","title":"Layout.FA2","content":"Layout.FA2 \nFA2 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#Noverlap","title":"Layout.Noverlap","content":"Layout.Noverlap \nNoverlap \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#Circular","title":"Layout.Circular","content":"Layout.Circular \nCircular \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#Random","title":"Layout.Random","content":"Layout.Random \nRandom \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-layout.html#Rotation","title":"Layout.Rotation","content":"Layout.Rotation \nRotation \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.Init \nInit \nNode.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-node.html#Init","title":"Node.Init","content":"Node.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-node.html#Style","title":"Node.Style","content":"Node.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapoptions.html","title":"NoverlapOptions","content":"NoverlapOptions \n \nNoverlapOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNoverlapOptions.Init \nInit \nNoverlapOptions.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapoptions.html#\u0060\u0060.ctor\u0060\u0060","title":"NoverlapOptions.\u0060\u0060.ctor\u0060\u0060","content":"NoverlapOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapoptions.html#Init","title":"NoverlapOptions.Init","content":"NoverlapOptions.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapoptions.html#Style","title":"NoverlapOptions.Style","content":"NoverlapOptions.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapsettings.html","title":"NoverlapSettings","content":"NoverlapSettings \n \nNoverlapSettings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNoverlapSettings.Init \nInit \nNoverlapSettings.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapsettings.html#\u0060\u0060.ctor\u0060\u0060","title":"NoverlapSettings.\u0060\u0060.ctor\u0060\u0060","content":"NoverlapSettings.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapsettings.html#Init","title":"NoverlapSettings.Init","content":"NoverlapSettings.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-noverlapsettings.html#Style","title":"NoverlapSettings.Style","content":"NoverlapSettings.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-plainjsonstring.html","title":"PlainJsonString","content":"PlainJsonString \n \nPlainJsonString.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPlainJsonString.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-plainjsonstring.html#\u0060\u0060.ctor\u0060\u0060","title":"PlainJsonString.\u0060\u0060.ctor\u0060\u0060","content":"PlainJsonString.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-plainjsonstring.html#Value","title":"PlainJsonString.Value","content":"PlainJsonString.Value \nValue \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-plainjsonstringconverter.html","title":"PlainJsonStringConverter","content":"PlainJsonStringConverter \n \nPlainJsonStringConverter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-plainjsonstringconverter.html#\u0060\u0060.ctor\u0060\u0060","title":"PlainJsonStringConverter.\u0060\u0060.ctor\u0060\u0060","content":"PlainJsonStringConverter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-randomoptions.html","title":"RandomOptions","content":"RandomOptions \n \nRandomOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRandomOptions.Init \nInit \nRandomOptions.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-randomoptions.html#\u0060\u0060.ctor\u0060\u0060","title":"RandomOptions.\u0060\u0060.ctor\u0060\u0060","content":"RandomOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-randomoptions.html#Init","title":"RandomOptions.Init","content":"RandomOptions.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-randomoptions.html#Style","title":"RandomOptions.Style","content":"RandomOptions.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-rotationoptions.html","title":"RotationOptions","content":"RotationOptions \n \nRotationOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRotationOptions.Init \nInit \nRotationOptions.Style \nStyle","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-rotationoptions.html#\u0060\u0060.ctor\u0060\u0060","title":"RotationOptions.\u0060\u0060.ctor\u0060\u0060","content":"RotationOptions.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-rotationoptions.html#Init","title":"RotationOptions.Init","content":"RotationOptions.Init \nInit \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-rotationoptions.html#Style","title":"RotationOptions.Style","content":"RotationOptions.Style \nStyle \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html","title":"SigmaGraph","content":"SigmaGraph \n \nSigmaGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSigmaGraph.AddEdge \nAddEdge \nSigmaGraph.AddNode \nAddNode \nSigmaGraph.GetWidgetsAsString \nGetWidgetsAsString \nSigmaGraph.Width \nWidth \nSigmaGraph.Widgets \nWidgets \nSigmaGraph.Layout \nLayout \nSigmaGraph.Height \nHeight \nSigmaGraph.GraphData \nGraphData \nSigmaGraph.Settings \nSettings","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#\u0060\u0060.ctor\u0060\u0060","title":"SigmaGraph.\u0060\u0060.ctor\u0060\u0060","content":"SigmaGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#AddEdge","title":"SigmaGraph.AddEdge","content":"SigmaGraph.AddEdge \nAddEdge \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#AddNode","title":"SigmaGraph.AddNode","content":"SigmaGraph.AddNode \nAddNode \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#GetWidgetsAsString","title":"SigmaGraph.GetWidgetsAsString","content":"SigmaGraph.GetWidgetsAsString \nGetWidgetsAsString \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#Width","title":"SigmaGraph.Width","content":"SigmaGraph.Width \nWidth \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#Widgets","title":"SigmaGraph.Widgets","content":"SigmaGraph.Widgets \nWidgets \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#Layout","title":"SigmaGraph.Layout","content":"SigmaGraph.Layout \nLayout \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#Height","title":"SigmaGraph.Height","content":"SigmaGraph.Height \nHeight \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#GraphData","title":"SigmaGraph.GraphData","content":"SigmaGraph.GraphData \nGraphData \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-sigmagraph.html#Settings","title":"SigmaGraph.Settings","content":"SigmaGraph.Settings \nSettings \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html","title":"VisGraph","content":"VisGraph \n \nVisGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVisGraph.empty \nempty \nVisGraph.show \nshow \nVisGraph.withCircularLayout \nwithCircularLayout \nVisGraph.withEdge \nwithEdge \nVisGraph.withEdges \nwithEdges \nVisGraph.withForceAtlas2 \nwithForceAtlas2 \nVisGraph.withHoverSelector \nwithHoverSelector \nVisGraph.withNode \nwithNode \nVisGraph.withNodes \nwithNodes \nVisGraph.withNoverlap \nwithNoverlap \nVisGraph.withRandomLayout \nwithRandomLayout \nVisGraph.withRenderer \nwithRenderer \nVisGraph.withSize \nwithSize","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"VisGraph.\u0060\u0060.ctor\u0060\u0060","content":"VisGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#empty","title":"VisGraph.empty","content":"VisGraph.empty \nempty \n Creates an empty graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#show","title":"VisGraph.show","content":"VisGraph.show \nshow \n Shows a graph as HTML","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withCircularLayout","title":"VisGraph.withCircularLayout","content":"VisGraph.withCircularLayout \nwithCircularLayout \n Gives a graph a circular layout","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withEdge","title":"VisGraph.withEdge","content":"VisGraph.withEdge \nwithEdge \n Adds a single edge to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withEdges","title":"VisGraph.withEdges","content":"VisGraph.withEdges \nwithEdges \n Adds a sequence of edges to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withForceAtlas2","title":"VisGraph.withForceAtlas2","content":"VisGraph.withForceAtlas2 \nwithForceAtlas2 \n Applies the ForceAtlas2 layout algorithm to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withHoverSelector","title":"VisGraph.withHoverSelector","content":"VisGraph.withHoverSelector \nwithHoverSelector \n Hoverselector lets you hover over a node and see all its edges","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withNode","title":"VisGraph.withNode","content":"VisGraph.withNode \nwithNode \n Adds a single node to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withNodes","title":"VisGraph.withNodes","content":"VisGraph.withNodes \nwithNodes \n Adds a sequence of nodes to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withNoverlap","title":"VisGraph.withNoverlap","content":"VisGraph.withNoverlap \nwithNoverlap \n Applies the Noverlap layout algorithm to a graph","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withRandomLayout","title":"VisGraph.withRandomLayout","content":"VisGraph.withRandomLayout \nwithRandomLayout \n Gives a graph a random layout","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withRenderer","title":"VisGraph.withRenderer","content":"VisGraph.withRenderer \nwithRenderer \n Sets the Renderer settings","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraph.html#withSize","title":"VisGraph.withSize","content":"VisGraph.withSize \nwithSize \n Sets the size of a canvas (in pixels)","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html","title":"VisGraphElement","content":"VisGraphElement \n \nVisGraphElement.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVisGraphElement.edge \nedge \nVisGraphElement.node \nnode \nVisGraphElement.withEdgeData \nwithEdgeData \nVisGraphElement.withNodeData \nwithNodeData","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html#\u0060\u0060.ctor\u0060\u0060","title":"VisGraphElement.\u0060\u0060.ctor\u0060\u0060","content":"VisGraphElement.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html#edge","title":"VisGraphElement.edge","content":"VisGraphElement.edge \nedge \n Creates an edge between the source and target nodes","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html#node","title":"VisGraphElement.node","content":"VisGraphElement.node \nnode \n Creates a node with the specified key","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html#withEdgeData","title":"VisGraphElement.withEdgeData","content":"VisGraphElement.withEdgeData \nwithEdgeData \n Configures edge data with various optional parameters","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-visgraphelement.html#withNodeData","title":"VisGraphElement.withNodeData","content":"VisGraphElement.withNodeData \nwithNodeData \n Configures node data with various optional parameters","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-interactive-formatters.html","title":"Formatters","content":"Formatters \n \nFormatters.toInteractiveHTML \ntoInteractiveHTML","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-interactive-formatters.html#toInteractiveHTML","title":"Formatters.toInteractiveHTML","content":"Formatters.toInteractiveHTML \ntoInteractiveHTML \n Converts a Cytoscape type to it\u0027s HTML representation to show in a notebook environment.","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-interactive-formatterkernelextension.html","title":"FormatterKernelExtension","content":"FormatterKernelExtension \n \nFormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/reference/sigma-net-interactive-formatterkernelextension.html#\u0060\u0060.ctor\u0060\u0060","title":"FormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060","content":"FormatterKernelExtension.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"http://localhost:8901/1_Introduction.html","title":"Introduction\r\n","content":"Introduction\r\nLibrary Name\r\nSigma.NET\r\nSigma.NET.Interactive\r\nDescription\r\nSigma.NET is a powerful and easy-to-use library for visualizing graphs and networks that provides intuitive methods to create, customize, and display   various types of graphs, making it suitable for both beginners and advanced users. Additionally, Sigma.NET.Interactive offers interactive visualization options, allowing users to explore and manipulate graphs in real-time for deeper insights and analysis.\r\nGraphs\r\nA graph is a mathematical structure used to model pairwise relationships between objects. It consists of a set of nodes (also called vertices) and a set of edges (also called links or connections) that connect pairs of nodes. Graphs are widely used in various fields such as computer science, biology, social sciences, and network science to represent and analyze networks.\r\nNodes (Vertices)\r\nNodes are the individual entities or points in a graph. Each node can represent a different object, such as a person in a social network, a gene in a biological network, or a computer in a communication network. Nodes are typically depicted as dots or circles in a graphical representation.\r\nEdges (Links)\r\nEdges are the connections between nodes in a graph. Each edge represents a relationship or interaction between two nodes. Edges can be directed or undirected:\r\n\r\nUndirected Edges: Represent bidirectional relationships where the connection does not have a specific direction (e.g., friendship in a social network).\r\nDirected Edges: Represent unidirectional relationships where the connection has a specific direction (e.g., a follower relationship in Twitter).\r\n\r\nThese basic concepts form the foundation for understanding and visualizing graphs.\r\nFeatures:\r\n\r\nSimple and intuitive API\r\nCustomizable node and edge attributes\r\nInteractive visualization options\r\n\r\nInstallation\r\nUsing nuget\r\n//Sigma.NET and Sigma.NET.Interactive\r\n# \u0026quot;nuget: C:/Users/lukas/Documents/GitHub/Project/Sigma.NET/pkg\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET, 0.0.0-dev\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET.Interactive, 0.0.0-dev\u0026quot;\r\n\r\nopen Sigma.NET\r\nopen Sigma.NET.Interactive\r\n\r\n","headings":["Introduction","Library Name","Description","Graphs","Nodes (Vertices)","Edges (Links)","Features:","Installation"],"type":"content"},{"uri":"http://localhost:8901/2_Basic_Usage.html","title":"Basic Usage\r\n","content":"Basic Usage\r\nInstallation using NuGet\r\n//Sigma.NET and Sigma.NET.Interactive\r\n# \u0026quot;nuget: C:/Users/lukas/Documents/GitHub/Project/Sigma.NET/pkg\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET, 0.0.0-dev\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET.Interactive, 0.0.0-dev\u0026quot;\r\n//Additional Librarys\r\n#r \u0026quot;nuget: DynamicObj\u0026quot;\r\n#r \u0026quot;nuget: Newtonsoft.Json\u0026quot;\r\n#r \u0026quot;nuget: Giraffe.ViewEngine\u0026quot;\r\n\r\n\r\nopen Sigma.NET\r\nopen Sigma.NET.Interactive\r\n\r\nopen System\r\nopen DynamicObj\r\nopen Newtonsoft.Json\r\nopen Giraffe.ViewEngine\r\n\r\nCreating a simple Graph :\r\n// Initiate a new Graph\r\nlet newGraph = VisGraph.empty()\r\n\r\n// Initiate new Nodes \r\nlet node1 = Node.Init(\u0026quot;1\u0026quot;)\r\nlet node2 = Node.Init(\u0026quot;2\u0026quot;)\r\n\r\n//Initiate new Edge similar to how you initiate new Nodes\r\nlet edge1 = Edge.Init(\u0026quot;1\u0026quot;,\u0026quot;2\u0026quot;)\r\n\r\n//Add Nodes and Edges to the Graph \r\nnewGraph\r\n|\u0026gt; VisGraph.withNodes([node1;node2])\r\n|\u0026gt; VisGraph.withEdge(edge1)\r\n\r\n\r\nCustomizing nodes and edges:\r\nBasic Customization\r\n//create Nodes with DisplayData\r\nlet styledNode1 = Node.Init(key=\u0026quot;s1\u0026quot; , DisplayData = DisplayData.Init(Size = 10 , Label = \u0026quot;Node 1\u0026quot;))\r\nlet styledNode2 = Node.Init(key = \u0026quot;s2\u0026quot; , DisplayData = DisplayData.Init(Size = 10 , Label = \u0026quot;Node 2\u0026quot;))\r\n\r\n//create edges with DisplayData\r\nlet styledEdge = Edge.Init(\u0026quot;s1\u0026quot; , \u0026quot;s2\u0026quot; , DisplayData = DisplayData.Init(Size = 10))\r\n\r\nVisGraph.empty()\r\n|\u0026gt; VisGraph.withNodes([styledNode1 ; styledNode2])\r\n|\u0026gt; VisGraph.withEdge(styledEdge)\r\n\r\n\r\nColor options\r\nYou can adjust the colors of nodes and edges using html-color-codes. https://html-color.codes/\r\n// Create colored Nodes\r\nlet redNode = Node.Init(\u0026quot;r\u0026quot; , DisplayData.Init(Size = 10 , Color = \u0026quot;#ff0000\u0026quot;))\r\nlet greenNode = Node.Init(\u0026quot;g\u0026quot; , DisplayData.Init(Size = 10 , Color = \u0026quot;#008000\u0026quot;))\r\n\r\n//Create colored Edge\r\nlet yellowEdge = Edge.Init(\u0026quot;r\u0026quot; , \u0026quot;g\u0026quot; , \u0026quot;y\u0026quot; , DisplayData.Init(Size = 10 , Color = \u0026quot;#ffff00\u0026quot;))\r\n\r\nVisGraph.empty()\r\n|\u0026gt; VisGraph.withNodes([redNode ; greenNode])\r\n|\u0026gt; VisGraph.withEdge(yellowEdge)\r\n\r\n\r\nVisualization\r\nTo view the graph, you can either use the Sigma.Net.Interactive library or display the graph as an HTML file.\r\nlet exampleGraph =\r\n    VisGraph.empty()\r\n    |\u0026gt; VisGraph.withNodes([redNode ; greenNode])\r\n    |\u0026gt; VisGraph.withEdge(yellowEdge)\r\n\r\nexampleGraph\r\n|\u0026gt; VisGraph.show()\r\n\r\n","headings":["Basic Usage","Installation using NuGet","Creating a simple Graph :","Customizing nodes and edges:","Basic Customization","Color options","Visualization"],"type":"content"},{"uri":"http://localhost:8901/3_Advanced_Usage.html","title":"Advanced Usage\r\n","content":"Advanced Usage\r\nInstalling the required Librarys\r\n//Sigma.NET and Sigma.NET.Interactive\r\n# \u0026quot;nuget: C:/Users/lukas/Documents/GitHub/Project/Sigma.NET/pkg\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET, 0.0.0-dev\u0026quot;\r\n#r \u0026quot;nuget: Sigma.NET.Interactive, 0.0.0-dev\u0026quot;\r\n//Additional Librarys\r\n#r \u0026quot;nuget: DynamicObj\u0026quot;\r\n#r \u0026quot;nuget: Newtonsoft.Json\u0026quot;\r\n#r \u0026quot;nuget: Giraffe.ViewEngine\u0026quot;\r\n\r\n\r\nopen Sigma.NET\r\nopen Sigma.NET.Interactive\r\n\r\nopen System\r\nopen DynamicObj\r\nopen Newtonsoft.Json\r\nopen Giraffe.ViewEngine\r\n\r\nAdding multiple nodes at once\r\n//Create a Node-Sequence, in this case a list but you can also use other sequence types like arrays or just a sequence\r\nlet nodesToAdd = [1..10] |\u0026gt; List.map (fun x -\u0026gt; Node.Init(string x, DisplayData.Init(Label = string x, Size= 15)))\r\n\r\n// Creating an Edge Sequence\r\nlet edgesToAdd = [1,2; 2,5; 7,3; 1,4; 8,6; 4,1] |\u0026gt; List.map (fun (x,y) -\u0026gt; Edge.Init(string x,string y))\r\n\r\n// Add the nodesequence and  edgesequence to an empty graph \r\nVisGraph.empty()\r\n|\u0026gt; VisGraph.withNodes(nodesToAdd) // add the node sequence\r\n|\u0026gt; VisGraph.withEdges(edgesToAdd) // add the edge sequence\r\n|\u0026gt; VisGraph.withCircularLayout()  // choosing the desired Layout\r\n\r\n\r\nCreating complex Networks and using other Librarys together with Sigma.NET\r\n// Reference the Graphoscope package\r\n#r \u0026quot;nuget: Graphoscope, 0.4.0\u0026quot;\r\nopen Graphoscope\r\nopen Graphoscope.RandomModels\r\n\r\n// Define colors for nodes\r\nlet colors = [|\u0026quot;#F2FFE9\u0026quot;;\u0026quot;#A6CF98\u0026quot;;\u0026quot;#557C55\u0026quot;;\u0026quot;#FA7070\u0026quot;|]\r\n\r\n// Initialize parameters for the graph model\r\nlet N = 50\r\nlet rnd = new Random()\r\n\r\n// Create a random graph using the BollobasRiordan model\r\nlet myBollobasRiordan = RandomModels.BollobasRiordan.initDirectedFGraph N 0.5 0.1 0.4 0.6 0.4 FGraph.empty\r\n\r\n// Add nodes\r\nlet exampleVisGRaph =\r\n    VisGraph.empty()\r\n    |\u0026gt; VisGraph.withNodes[\r\n        for node in myBollobasRiordan do                                      \r\n            yield Node.Init(key=string node.Key, DisplayData=DisplayData.Init(Size=rnd.Next(1, 18), Color=colors.[rnd.Next(0, 4)], Label=string node.Key))\r\n    ]\r\n//Add edges\r\n    |\u0026gt; VisGraph.withEdges[\r\n        for node in myBollobasRiordan do\r\n            let pred, t, _ = node.Value\r\n            for kv in pred do\r\n                yield Edge.Init(source=string kv.Key, target=string t, DisplayData=DisplayData.Init(Size=rnd.Next(1, 3)))\r\n    ]\r\nexampleVisGRaph\r\n\r\n\r\nLayouts\r\nRandom Layout\r\nexampleVisGRaph\r\n|\u0026gt; VisGraph.withRandomLayout()\r\n\r\n\r\nCircular Layout\r\nexampleVisGRaph\r\n|\u0026gt; VisGraph.withCircularLayout()\r\n\r\n\r\nRender settings\r\nThere are many differend render settings you can choose from. You can use this to define a set of render settings before visualizing your graphs to have a homogenous outcome if you are visuallizing multiple graphs.\r\nexampleVisGRaph\r\n|\u0026gt; VisGraph.withRenderer(Render.Settings.Init(LabelSize = 20, LabelColor=Render.ColorOrReference.Init(Color=\u0026quot;#FA7070\u0026quot;)))\r\n\r\n\r\nHover selector\r\nThe hoverselector is a powerfull tool that allows you to keep an overview over big graphs as it lets you hover over each node and see the edges it is part of.\r\n//Adding the HoverSelector option to our graph\r\nexampleVisGRaph\r\n|\u0026gt; VisGraph.withHoverSelector()\r\n\r\n\r\n","headings":["Advanced Usage","Installing the required Librarys","Adding multiple nodes at once","Creating complex Networks and using other Librarys together with Sigma.NET","Layouts","Random Layout","Circular Layout","Render settings","Hover selector"],"type":"content"},{"uri":"http://localhost:8901/index.html","title":"Getting Started","content":"\r\nsigmaNET\r\nThe sigmaNET project aims to provide a rigorous and performant tool for Network Science.\r\nIt is aimed at anyone who works with Graphs/Networks and does not require a strong knowledge of F# to get started.\r\nGetting Started\r\nPrerequisites\r\nTo set up a dev environment, we recommend VSCode with the Ionide plugin\r\nYou will also need DotNet 6 installed.\r\nThe library is designed primarily for use in an fsharp scripting environment using .fsx files.\r\nBut it also works well in notebooks.\r\nThis video has a good walk through of setting your environment.\r\nContributing and copyright\r\nThe project is hosted on GitHub where you can report issues, fork\r\nthe project and submit pull requests. If you\u0027re adding a new public API, please also\r\nconsider adding samples that can be turned into a documentation. You might\r\nalso want to read the library design notes to understand how it works.\r\nThe library is available under the OSI-approved MIT license, which allows modification and\r\nredistribution for both commercial and non-commercial purposes. For more information see the\r\nLicense file in the GitHub repository.\r\n","headings":["sigmaNET","Getting Started","Prerequisites","Contributing and copyright"],"type":"content"}]